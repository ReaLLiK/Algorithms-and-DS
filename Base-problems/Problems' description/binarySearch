Реализуйте бинарный поиск на массиве чисел, отсортированном в неубывающем порядке.
Запрещается использование готовых функций бинарного поиска из стандартных библиотек.

Формат входных данных

В первой строке записано целое число n — количество чисел в массиве.
Во второй строке через пробел записаны n чисел массива.
Все числа целые и принадлежат промежутку от -2^31 до 2^31 - 1 включительно.
Числа в массиве упорядочены по неубыванию.
В третьей строке записано целое число k — количество запросов.
В четвёртой строке через пробел записаны k целых чисел-запросов из промежутка от -2^31 до 2^31 - 1 включительно.

Формат выходных данных

Для каждого числа-запроса x в отдельной строке выведите через пробел числа b, l и r,
где b равно 1, если x присутствует в массиве, или 0 в противном случае;
l — индекс первого элемента, большего либо равного x; r — индекс первого элемента, большего x.
Элементы массива нумеруются индексами от 0 до n-1.
Если подходящих элементов в массиве нет, договоримся, что возвращаемый индекс будет равен n.

------------------------------------------------------------------------------------------------------------------------------------------

Implement binary search on an array of numbers sorted in non-decreasing order.
It is prohibited to use ready-made binary search functions from standard libraries.

Input format

The first line contains the integer n — the number of numbers in the array.
The second line contains n numbers of the array separated by spaces.
All numbers are integers and belong to the interval from -2^31 to 2^31 - 1 inclusive.
The numbers in the array are ordered in non-decreasing order.
The third line contains the integer k — the number of requests.
The fourth line contains k space-separated query integers from the range from -2^31 to 2^31 - 1 inclusive.

Output format

For each query number x, print in a separate line the numbers b, l and r, separated by spaces.
where b is equal to 1 if x is present in the array, or 0 otherwise;
l is the index of the first element greater than or equal to x; r is the index of the first element greater than x.
Array elements are numbered with indices from 0 to n-1.
If there are no suitable elements in the array, we agree that the returned index will be equal to n.
